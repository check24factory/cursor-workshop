[project]
name = "cursor-workshop"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pandas>=2.3.1",
    "pydantic>=2.11.7",
    "regex>=2024.11.6",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.12.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/cursor_workshop"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src --cov-report=term-missing --cov-report=html --tb=short -m 'not docker'"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "docker: marks tests as docker tests (deselect with '-m \"not docker\"')",
]
filterwarnings = [
    "ignore:Support for class-based `config` is deprecated:DeprecationWarning:pydantic.*",
]
